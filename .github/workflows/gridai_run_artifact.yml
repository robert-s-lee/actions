name: "Grid.ai Run Artifact"
on:
  workflow_call:
    inputs:
      script-name:
        required: true
        default: "run.py"
        type: string   
      repository:
        required: false
        default: ""
        type: string     
      grid-url:
        required: false
        default: ""
        type: string    
      grid-args:
        required: false
        default: "--localdir --instance_type t2.medium --dependency_file requirements.txt"
        type: string    
      script-args:
        required: false
        default: ""
        type: string           
    secrets:
      gridai-username:
        required: true
      gridai-key:
        required: true
jobs:
  gridai-run:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repository }}
      - uses: gridai-actions/gridai-login@v0
        with:
          gridai-username: ${{ secrets.gridai-username }} 
          gridai-key: ${{ secrets.gridai-key }}
      - run: |
          grid run ${{ inputs.grid-args }} ${{ inputs.script-name }} ${{ inputs.script-args }} | tee grid.run.log
          export run_name=$(cat grid.run.log | awk -F: '$1=/grid_name/ {print $2}' | tr -s '[:blank:]')
          echo "run_name=${run_name}" >> $GITHUB_ENV           
          if [[ -z "${run_name}" ]]; then
            echo "Error: 'grid_name:[run_name]' not found in output"
            exit 1
          fi        
      - id: grid-status
        uses: gridai-actions/gridai-status@v0
        with:
          obj-type: run
          obj-id: ${run_name}
      - run: |
          if [ "${{ steps.grid-status.outputs.obj-status }}" != "succeeded" ]; then
            exit 1
          fi             
      - run: |
          grid artifacts ${{ env.run_name }}
          if [[ $? != 0 ]]; then
            echo "Error: ${run_name} artifacts not found"
            exit 1
          fi
          ls grid_artifacts/*
