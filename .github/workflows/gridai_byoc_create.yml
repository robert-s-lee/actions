name: "Grid.ai BYOC Create"
on:
  workflow_call:
    inputs:
      cloud_provider:
        required: false
        default: aws
        type: string    
      # make sure name is not longer than this
      cluster_name:
        required: false
        default: "c$(date '+%y%m%d-%H%M%S')"
        type: string
      cluster_region:
        required: false
        default: us-east-1
        type: string
      instance_types:
        required: false
        default: "t2.medium,t2.large"
        type: string      
      grid_args:
        required: false
        default: "--cost-savings"
        type: string               
    secrets:
      username:
        required: true
      key:
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
jobs:
  gridai-byoc-create:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: robert-s-lee/gridai_action_login@main
        with:
          username: ${{ secrets.username }} 
          key: ${{ secrets.key }} 
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1         
      - uses: hashicorp/setup-terraform@v1
      - run: |
          terraform init
      - run: |
          terraform apply -auto-approve
          terraform output -json > tf.output.json
      - run: |
          cat tf.output.json
          # the first line is program name
      - run: |
          export cluster_name=${{ inputs.cluster_name }}
          echo "cluster_name=${cluster_name}" >> $GITHUB_ENV
          export EXTERNAL_ID=$(cat tf.output.json | tail -n +2 | jq -r '.external_id.value')
          export ROLE_ARN=$(cat tf.output.json | tail -n +2 | jq -r '.role_arn.value')
          echo EXTERNAL_ID=${EXTERNAL_ID}
          echo ROLE_ARN=${ROLE_ARN}
          grid clusters ${{ inputs.cloud_provider }} ${{ inputs.grid_args }} --role-arn ${ROLE_ARN} --external-id ${EXTERNAL_ID} --region ${{ inputs.cluster_region }} --instance-types ${{ inputs.instance_types }} ${cluster_name}
      - uses: robert-s-lee/actions@main
        with:
          obj_type: cluster 
          obj_id: ${cluster_name}